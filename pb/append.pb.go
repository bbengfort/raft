// Code generated by protoc-gen-go. DO NOT EDIT.
// source: append.proto

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	append.proto
	client.proto
	log.proto
	service.proto
	time.proto
	vote.proto

It has these top-level messages:
	AppendRequest
	AppendReply
	CommitRequest
	CommitReply
	LogEntry
	LogMeta
	LogSnapshot
	Time
	VoteRequest
	VoteReply
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AppendRequest struct {
	Term         uint64      `protobuf:"varint,1,opt,name=term" json:"term,omitempty"`
	Leader       string      `protobuf:"bytes,2,opt,name=leader" json:"leader,omitempty"`
	PrevLogIndex uint64      `protobuf:"varint,3,opt,name=prevLogIndex" json:"prevLogIndex,omitempty"`
	PrevLogTerm  uint64      `protobuf:"varint,4,opt,name=prevLogTerm" json:"prevLogTerm,omitempty"`
	LeaderCommit uint64      `protobuf:"varint,5,opt,name=leaderCommit" json:"leaderCommit,omitempty"`
	Entries      []*LogEntry `protobuf:"bytes,6,rep,name=entries" json:"entries,omitempty"`
}

func (m *AppendRequest) Reset()                    { *m = AppendRequest{} }
func (m *AppendRequest) String() string            { return proto.CompactTextString(m) }
func (*AppendRequest) ProtoMessage()               {}
func (*AppendRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AppendRequest) GetTerm() uint64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *AppendRequest) GetLeader() string {
	if m != nil {
		return m.Leader
	}
	return ""
}

func (m *AppendRequest) GetPrevLogIndex() uint64 {
	if m != nil {
		return m.PrevLogIndex
	}
	return 0
}

func (m *AppendRequest) GetPrevLogTerm() uint64 {
	if m != nil {
		return m.PrevLogTerm
	}
	return 0
}

func (m *AppendRequest) GetLeaderCommit() uint64 {
	if m != nil {
		return m.LeaderCommit
	}
	return 0
}

func (m *AppendRequest) GetEntries() []*LogEntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

type AppendReply struct {
	Remote      string `protobuf:"bytes,1,opt,name=remote" json:"remote,omitempty"`
	Term        uint64 `protobuf:"varint,2,opt,name=term" json:"term,omitempty"`
	Success     bool   `protobuf:"varint,3,opt,name=success" json:"success,omitempty"`
	Index       uint64 `protobuf:"varint,4,opt,name=index" json:"index,omitempty"`
	CommitIndex uint64 `protobuf:"varint,5,opt,name=commitIndex" json:"commitIndex,omitempty"`
}

func (m *AppendReply) Reset()                    { *m = AppendReply{} }
func (m *AppendReply) String() string            { return proto.CompactTextString(m) }
func (*AppendReply) ProtoMessage()               {}
func (*AppendReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AppendReply) GetRemote() string {
	if m != nil {
		return m.Remote
	}
	return ""
}

func (m *AppendReply) GetTerm() uint64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *AppendReply) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *AppendReply) GetIndex() uint64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *AppendReply) GetCommitIndex() uint64 {
	if m != nil {
		return m.CommitIndex
	}
	return 0
}

func init() {
	proto.RegisterType((*AppendRequest)(nil), "pb.AppendRequest")
	proto.RegisterType((*AppendReply)(nil), "pb.AppendReply")
}

func init() { proto.RegisterFile("append.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 250 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0x41, 0x4e, 0x84, 0x30,
	0x14, 0x86, 0x53, 0x86, 0x61, 0xe4, 0x81, 0x9b, 0xc6, 0x98, 0xc6, 0x15, 0x61, 0x61, 0x58, 0xb1,
	0xd0, 0x13, 0x18, 0xe3, 0xc2, 0x64, 0x56, 0x8d, 0x17, 0x18, 0xe0, 0x85, 0x90, 0x00, 0xad, 0x6d,
	0xc7, 0x38, 0x67, 0xf0, 0x6c, 0xde, 0xc9, 0xf0, 0x0a, 0xa6, 0xb3, 0xe3, 0xfb, 0x1f, 0xfc, 0xf9,
	0x3f, 0x20, 0x3f, 0x69, 0x8d, 0x73, 0x57, 0x6b, 0xa3, 0x9c, 0xe2, 0x91, 0x6e, 0x1e, 0xd2, 0x51,
	0xf5, 0x1e, 0xcb, 0x5f, 0x06, 0xb7, 0x2f, 0x74, 0x97, 0xf8, 0x79, 0x46, 0xeb, 0x38, 0x87, 0xd8,
	0xa1, 0x99, 0x04, 0x2b, 0x58, 0x15, 0x4b, 0x7a, 0xe6, 0xf7, 0x90, 0x8c, 0x78, 0xea, 0xd0, 0x88,
	0xa8, 0x60, 0x55, 0x2a, 0x57, 0xe2, 0x25, 0xe4, 0xda, 0xe0, 0xd7, 0x51, 0xf5, 0xef, 0x73, 0x87,
	0xdf, 0x62, 0x47, 0xdf, 0x5c, 0x65, 0xbc, 0x80, 0x6c, 0xe5, 0x8f, 0xa5, 0x36, 0xa6, 0x57, 0xc2,
	0x68, 0x69, 0xf1, 0x7d, 0xaf, 0x6a, 0x9a, 0x06, 0x27, 0xf6, 0xbe, 0x25, 0xcc, 0xf8, 0x23, 0x1c,
	0x70, 0x76, 0x66, 0x40, 0x2b, 0x92, 0x62, 0x57, 0x65, 0x4f, 0x79, 0xad, 0x9b, 0xfa, 0xa8, 0xfa,
	0xb7, 0xd9, 0x99, 0x8b, 0xdc, 0x8e, 0xe5, 0x0f, 0x83, 0x6c, 0xf3, 0xd1, 0xe3, 0x65, 0x59, 0x6e,
	0x70, 0x52, 0x0e, 0xc9, 0x27, 0x95, 0x2b, 0xfd, 0x5b, 0x46, 0x81, 0xa5, 0x80, 0x83, 0x3d, 0xb7,
	0x2d, 0x5a, 0x4b, 0x22, 0x37, 0x72, 0x43, 0x7e, 0x07, 0xfb, 0x81, 0x04, 0xfd, 0x7a, 0x0f, 0x8b,
	0x59, 0x4b, 0xeb, 0xbc, 0xbc, 0x9f, 0x1d, 0x46, 0x4d, 0x42, 0x3f, 0xf9, 0xf9, 0x2f, 0x00, 0x00,
	0xff, 0xff, 0x84, 0xdd, 0x5a, 0x16, 0x83, 0x01, 0x00, 0x00,
}
