// Code generated by protoc-gen-go. DO NOT EDIT.
// source: client.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type CommitRequest struct {
	Identity string `protobuf:"bytes,1,opt,name=identity" json:"identity,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Value    []byte `protobuf:"bytes,7,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *CommitRequest) Reset()                    { *m = CommitRequest{} }
func (m *CommitRequest) String() string            { return proto.CompactTextString(m) }
func (*CommitRequest) ProtoMessage()               {}
func (*CommitRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *CommitRequest) GetIdentity() string {
	if m != nil {
		return m.Identity
	}
	return ""
}

func (m *CommitRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CommitRequest) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type CommitReply struct {
	Success  bool      `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	Redirect string    `protobuf:"bytes,2,opt,name=redirect" json:"redirect,omitempty"`
	Error    string    `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
	Entry    *LogEntry `protobuf:"bytes,4,opt,name=entry" json:"entry,omitempty"`
}

func (m *CommitReply) Reset()                    { *m = CommitReply{} }
func (m *CommitReply) String() string            { return proto.CompactTextString(m) }
func (*CommitReply) ProtoMessage()               {}
func (*CommitReply) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *CommitReply) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *CommitReply) GetRedirect() string {
	if m != nil {
		return m.Redirect
	}
	return ""
}

func (m *CommitReply) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *CommitReply) GetEntry() *LogEntry {
	if m != nil {
		return m.Entry
	}
	return nil
}

func init() {
	proto.RegisterType((*CommitRequest)(nil), "pb.CommitRequest")
	proto.RegisterType((*CommitReply)(nil), "pb.CommitReply")
}

func init() { proto.RegisterFile("client.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 200 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x3c, 0x8f, 0x31, 0x6e, 0x84, 0x30,
	0x10, 0x45, 0xe5, 0xcd, 0x6e, 0x76, 0x77, 0x20, 0x8d, 0x95, 0xc2, 0xa2, 0x42, 0x54, 0x54, 0x14,
	0xc9, 0x11, 0xa2, 0x74, 0xa9, 0x2c, 0xe5, 0x00, 0x60, 0x46, 0xc8, 0x92, 0xb1, 0x1d, 0x7b, 0x88,
	0x44, 0x91, 0xbb, 0x47, 0xd8, 0x0b, 0xdd, 0xbc, 0xff, 0xa5, 0x37, 0xfa, 0x50, 0x2a, 0xa3, 0xd1,
	0x52, 0xe7, 0x83, 0x23, 0xc7, 0x4f, 0x7e, 0xa8, 0xee, 0xc6, 0x4d, 0x19, 0x9b, 0x6f, 0x78, 0xf9,
	0x70, 0xf3, 0xac, 0x49, 0xe2, 0xcf, 0x82, 0x91, 0x78, 0x05, 0x37, 0x3d, 0xa2, 0x25, 0x4d, 0xab,
	0x60, 0x35, 0x6b, 0xef, 0xf2, 0x60, 0xce, 0xe1, 0x6c, 0xfb, 0x19, 0xc5, 0x29, 0xe5, 0xe9, 0xe6,
	0xaf, 0x70, 0xf9, 0xed, 0xcd, 0x82, 0xe2, 0x5a, 0xb3, 0xb6, 0x94, 0x19, 0x9a, 0x3f, 0x28, 0x76,
	0xad, 0x37, 0x2b, 0x17, 0x70, 0x8d, 0x8b, 0x52, 0x18, 0x63, 0x72, 0xde, 0xe4, 0x8e, 0xdb, 0xbb,
	0x80, 0xa3, 0x0e, 0xa8, 0xe8, 0xa1, 0x3d, 0x78, 0x53, 0x63, 0x08, 0x2e, 0x88, 0xa7, 0x54, 0x64,
	0xe0, 0x0d, 0x5c, 0xd0, 0x52, 0x58, 0xc5, 0xb9, 0x66, 0x6d, 0xf1, 0x56, 0x76, 0x7e, 0xe8, 0xbe,
	0xdc, 0xf4, 0xb9, 0x65, 0x32, 0x57, 0xc3, 0x73, 0x1a, 0xf7, 0xfe, 0x1f, 0x00, 0x00, 0xff, 0xff,
	0x6b, 0x0e, 0x71, 0xd8, 0xfb, 0x00, 0x00, 0x00,
}
